ackage br.com.ecoffee.service.auth;

import java.util.Optional;

import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;

import br.com.ecoffee.model.cliente.Cliente;
import br.com.ecoffee.model.usuario.Usuario;
import br.com.ecoffee.service.cliente.ClienteService;
import br.com.ecoffee.service.usuario.UsuarioService;

public class AutenticacaoService implements UserDetailsService {

	private UsuarioService usuarioService;
	private ClienteService clienteService;

	public AutenticacaoService(UsuarioService usuarioService, ClienteService clienteService) {
		this.usuarioService = usuarioService;
		this.clienteService = clienteService;
	}

	@Override
	public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {

			Optional<Usuario> usuario = usuarioService.buscarPorNomeUsuario(username);

			if (usuario.isPresent()) {
				return User.builder()
						.username(usuario.get().getNomeUsuario())
						.password(usuario.get().getSenha())
						.authorities("ROLE_USUARIO")
						.build();
			}

			Optional<Cliente> cliente = clienteService.buscarClientePeloEmail(username);

			if (cliente.isPresent()) {
				return User.builder()
						.username(cliente.get().getEmail())
						.password(cliente.get().getSenha())
						.authorities("ROLE_CLIENTE")
						.build();
			}
			
			throw new UsernameNotFoundException("NÃ£o encontrado");

	}
}
